#include <iostream>

#include "board.hpp"
#include "solver.hpp"
#include "filemanip.hpp"

std::vector<int> hardest9x9 {
	0,0,5,3,0,0,0,0,0,
	8,0,0,0,0,0,0,2,0,
	0,7,0,0,1,0,5,0,0,

	4,0,0,0,0,5,3,0,0,
	0,1,0,0,7,0,0,0,6,
	0,0,3,2,0,0,0,8,0,

	0,6,0,5,0,0,0,0,9,
	0,0,4,0,0,0,0,3,0,
	0,0,0,0,0,9,7,0,0
};

std::vector<int> hard9x9 {
	8,0,0,0,0,0,0,0,0,
	0,0,3,6,0,0,0,0,0,
	0,7,0,0,9,0,2,0,0,
	0,5,0,0,0,7,0,0,0,
	0,0,0,0,4,5,7,0,0,
	0,0,0,1,0,0,0,3,0,
	0,0,1,0,0,0,0,6,8,
	0,0,8,5,0,0,0,1,0,
	0,9,0,0,0,0,4,0,0
};

std::vector<int> test9x9 {
	0,5,1,0,6,2,0,8,0,
	0,7,0,4,8,5,0,0,6,
	0,0,6,0,1,0,0,5,0,
	0,0,2,0,0,9,0,6,0,
	5,6,0,0,2,0,0,0,9,
	0,8,0,1,0,6,3,0,0,
	6,3,0,2,0,0,4,0,0,
	7,2,0,6,4,1,0,0,0,
	0,9,0,5,0,0,6,0,0
};

std::vector<int> minimum9x9{
	0,0,0,8,0,1,0,0,0,
	0,0,0,0,0,0,4,3,0,
	5,0,0,0,0,0,0,0,0,
	0,0,0,0,7,0,8,0,0,
	0,0,0,0,0,0,1,0,0,
	0,2,0,0,3,0,0,0,0,
	6,0,0,0,0,0,0,7,5,
	0,0,3,4,0,0,0,0,0,
	0,0,0,2,0,0,6,0,0
};

std::vector<int> easy{
	0,11,9,0,       0,16,13,4,      0,0,14,0,       10,6,15,0,
	4,12,15,0,      3,6,0,11,       0,5,0,1,        16,7,14,2,
	1,0,6,0,        15,2,0,0,       11,9,10,0,      0,0,8,0,
	0,13,0,0,       0,1,0,0,        4,6,0,15,       0,0,0,0,

	0,0,0,0,        0,0,15,0,       8,1,5,3,        0,4,11,7,
	6,0,1,0,        0,12,8,0,       9,0,0,2,        0,0,3,0,
	14,0,4,13,      6,0,0,3,        0,12,7,10,      8,0,2,0,
	3,8,0,0,        4,7,2,0,        6,0,0,0,        0,12,16,5,

	13,0,0,16,      0,8,14,10,      3,4,15,0,       12,5,1,11,
	0,0,0,6,        2,0,0,1,        10,0,11,0,      15,3,0,9,
	7,0,0,12,       0,4,0,15,       5,0,9,14,       0,0,0,0,
	10,0,0,8,       0,0,11,0,       0,0,1,12,       4,0,13,16,

	0,0,0,0,        0,0,7,0,        15,2,0,0,       0,0,12,3,
	0,0,7,0,        0,10,6,0,       1,8,0,13,       11,0,9,14,
	8,6,5,0,        0,3,0,0,        14,0,0,9,       0,0,0,0,
	0,16,0,2,       0,0,0,14,       0,10,0,0,       0,0,0,0
};

std::vector<int> hard{
	0,4,0,0,    8,0,16,0,   11,0,1,0,   0,6,0,14,
	3,0,0,9,    0,15,0,4,   10,7,0,13,  0,0,12,0,
	0,6,0,0,    2,11,0,0,   8,0,0,0,    3,0,0,0,
	15,0,0,0,   0,0,0,13,   0,0,14,0,   0,2,0,4,

	0,0,0,8,    0,3,0,0,    7,0,0,0,    5,0,0,0,
	0,0,0,0,    0,0,14,0,   0,0,0,10,   0,16,0,13,
	0,0,9,2,    5,0,0,0,    0,8,0,0,    11,0,0,0,
	12,0,1,0,   0,0,0,16,   0,0,13,0,   0,0,3,0,

	0,0,0,12,   15,0,0,0,   0,6,0,0,    13,0,4,7,
	16,1,13,0,  10,0,0,3,   0,0,7,0,    0,9,0,0,
	6,0,0,0,    0,0,11,0,   4,0,0,9,    0,0,2,10,
	0,3,0,0,    0,16,0,0,   0,14,8,0,   0,11,0,0,

	5,11,3,10,  0,0,0,8,    0,0,12,4,   0,0,0,1,
	0,14,0,0,   11,9,0,0,   0,13,15,0,  4,0,5,0,
	13,0,4,0,   6,0,0,0,    0,0,0,2,    0,12,0,9,
	0,12,0,16,  0,13,0,0,   0,1,0,0,    6,0,15,0
};

std::vector<int> minimum_56hints{
	4,0,0,0,    1,7,0,0,    0,0,0,0,    0,5,3,11,
	0,0,0,0,    0,4,0,0,    0,0,8,0,    0,0,0,0,
	0,0,0,0,    3,0,0,2,    0,0,0,0,    0,0,9,0,
	0,0,16,8,   0,0,0,0,    0,0,10,15,  0,0,0,0,

	0,0,0,0,    0,0,14,0,   0,0,0,0,    12,1,0,0,
	1,0,0,0,    0,0,0,0,    0,0,0,0,    0,3,7,0,
	0,0,0,0,    0,0,6,0,    0,0,14,8,   0,0,0,0,
	0,0,0,0,    0,0,16,10,  0,0,6,0,    0,0,0,0,

	0,0,0,10,   0,0,0,0,    11,0,0,0,   0,0,0,8,
	5,0,0,0,    7,9,0,0,    3,4,0,0,    0,0,0,0,
	0,0,15,6,   0,0,12,0,   0,0,0,0,    14,0,0,10,
	0,0,0,0,    0,5,0,0,    7,1,0,0,    0,0,0,0,

	0,9,0,0,    0,0,0,0,    1,0,0,0,    0,0,0,0,
	0,0,0,0,    0,0,15,0,   0,0,0,0,    10,0,0,0,
	0,0,0,0,    8,0,10,14,  0,0,0,0,    15,0,0,0,
	3,1,0,0,    0,0,0,0,    9,7,0,0,    0,4,0,0
};

std::vector<int> hoge {
	0,0,0,0, 	0,0,0,0, 	2,5,0,12, 	0,4,3,7,
	0,8,0,0,	7,0,0,0,	3,16,0,0,	6,0,0,0,
	3,0,0,0,	14,0,6,0, 	0,0,15,0,	0,5,0,9,
	0,7,11,5, 	4,13,0,0,	0,0,1,14,	0,0,10,0,

	2,13,1,8,	9,0,0,0,	14,0,6,0,	0,0,0,0,
	10,3,4,0,	5,0,15,0,	0,0,16,0,	0,11,6,2,
	0,0,14,15,	1,6,0,0,	7,0,2,3,	0,12,8,10,
	0,0,16,6,	2,0,0,0,	11,15,0,0,	0,0,0,14,

	13,0,0,0,	0,0,14,15,	0,0,0,10,	4,8,0,0,
	15,6,8,0,	10,5,0,16,	0,0,12,1,	2,9,0,0,
	7,11,5,0,	0,1,0,0,	0,8,0,2,	0,10,12,3,
	0,0,0,0,	0,9,0,8,	0,0,0,11,	1,13,15,5,

	0,16,0,0,	12,3,0,0,	0,0,4,6,	10,2,11,0,
 	5,0,6,0,	0,14,0,0,	0,1,0,7,	0,0,0,4,
	0,0,0,1,	0,0,11,9,	0,0,0,16,	0,0,13,0,
	8,2,10,0,	16,0,5,7,	0,0,0,0,	0,0,0,0
};

std::vector<int> debug{
	0,0,2,0,	16,11,7,5,	0,0,12,10,	9,0,0,0,
	0,13,10,0,	3,0,4,0,	0,0,0,7,	0,6,12,8,
	0,0,0,16,	10,14,8,1,	5,6,13,0,	0,0,11,0,
	0,0,0,1,	0,0,0,13,	0,0,3,0,	7,16,2,0,

	14,0,4,0,	0,0,0,0,	0,0,9,0,	0,5,8,0,
	0,3,12,0,	0,15,0,0,	0,0,0,0,	16,0,0,0,
	1,7,0,0,	0,0,3,16,	4,14,0,0,	0,0,15,9,
	0,0,0,0,	0,8,0,0,	0,11,0,0,	3,7,10,0,

	0,0,13,0,	0,3,0,0,	0,0,0,0,	15,0,14,4,
	6,0,11,0,	0,0,14,0,	0,3,5,0,	10,2,0,0,
	0,0,0,0,	0,0,0,0,	16,0,0,0,	0,0,0,13,
	0,16,8,0,	12,7,1,4,	0,0,0,0,	0,0,0,5,

	0,0,14,8,	0,0,0,0,	0,0,0,0,	0,13,3,0,
	7,0,0,0,	0,16,15,0,	0,12,0,0,	0,0,4,11,
	5,0,9,11,	0,12,0,3,	0,0,0,0,	0,0,0,7,
	0,0,6,4,	1,13,0,0,	3,0,0,0,	0,0,5,0
};

std::vector<int> debug9x9 {
	2,0,6,0,7,0,0,0,5,
	1,0,0,0,5,0,0,3,0,
	9,5,0,1,6,3,8,4,0,
	7,0,0,4,3,6,2,0,0,
	0,0,0,0,9,0,0,0,0,
	0,0,3,7,2,1,0,0,8,
	0,6,9,2,8,7,0,5,1,
	0,7,1,0,4,0,0,0,6,
	5,0,0,0,1,0,7,0,3
};

void test9() {
	sudoku::board<3> bd;
	bd.vector_input(hardest9x9);
	bd.show();
	sudoku::solver<3> slv;
	slv.solve(bd);
	std::cout << std::dec << "node cuont: " << slv.node_count << '\n';
}

void test16() {
	sudoku::board<4> bd;
	bd.vector_input(debug);
	bd.show();
	sudoku::solver<4> slv;
	slv.solve(bd);
	std::cout << std::dec << "node count: " << slv.node_count << '\n';
}

int main(int argc, char const *argv[]) {
	if (argc != 2) {
		throw std::invalid_argument("too much/few arguments.");
	}
	std::cout << "bit board sudoku" << std::endl;
	std::string data;
	read_text_file(std::string(argv[1]), data);
	sudoku::board<4> bd;
	bd.string_input(data);
	bd.show();
	sudoku::solver<4> slv;
	slv.solve(bd);
	return 0;
}
